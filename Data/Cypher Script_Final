// CONSTRAINT creation
// -------------------
//
// Creating node uniqueness constraints, ensuring no duplicates for the given node label and ID property exist in the database. This also ensures no duplicates are introduced in future.
//
CREATE CONSTRAINT `Title_Painting_uniq` IF NOT EXISTS
FOR (n: `Painting`)
REQUIRE (n.`Title`) IS UNIQUE;
CREATE CONSTRAINT `Artist_Name_Artist_uniq` IF NOT EXISTS
FOR (n: `Artist`)
REQUIRE (n.`Artist Name`) IS UNIQUE;
CREATE CONSTRAINT `Object_Type_Object_Category_uniq` IF NOT EXISTS
FOR (n: `Object Category`)
REQUIRE (n.`Object Type`) IS UNIQUE;
CREATE CONSTRAINT `Style_Name_Style_uniq` IF NOT EXISTS
FOR (n: `Style`)
REQUIRE (n.`Style Name`) IS UNIQUE;
CREATE CONSTRAINT `Themes_Events_uniq` IF NOT EXISTS
FOR (n: `Events`)
REQUIRE (n.`Themes`) IS UNIQUE;
CREATE CONSTRAINT `Location_Name_Locations_uniq` IF NOT EXISTS
FOR (n: `Locations`)
REQUIRE (n.`Location Name`) IS UNIQUE;
CREATE CONSTRAINT `Character_Name_Character_uniq` IF NOT EXISTS
FOR (n: `Character`)
REQUIRE (n.`Character Name`) IS UNIQUE;
CREATE CONSTRAINT `Place_name_Place_of Production_uniq` IF NOT EXISTS
FOR (n: `Place of Production`)
REQUIRE (n.`Place name`) IS UNIQUE;
CREATE CONSTRAINT `Other_Content Details_Other_Content_uniq` IF NOT EXISTS
FOR (n: `Other Content`)
REQUIRE (n.`Other Content Details`) IS UNIQUE;
CREATE CONSTRAINT `Material_Type_Material_uniq` IF NOT EXISTS
FOR (n: `Material`)
REQUIRE (n.`Material Type`) IS UNIQUE;
CREATE CONSTRAINT `Date_Time_uniq` IF NOT EXISTS
FOR (n: `Time`)
REQUIRE (n.`Date`) IS UNIQUE;
CREATE CONSTRAINT `Text_Name_Text_uniq` IF NOT EXISTS
FOR (n: `Text`)
REQUIRE (n.`Text Name`) IS UNIQUE;
CREATE CONSTRAINT `Credit_Line_Acquisition_uniq` IF NOT EXISTS
FOR (n: `Acquisition`)
REQUIRE (n.`Credit Line`) IS UNIQUE;
CREATE CONSTRAINT `Book_Name_Book_uniq` IF NOT EXISTS
FOR (n: `Book`)
REQUIRE (n.`Book Name`) IS UNIQUE;
CREATE CONSTRAINT `Disestablished_Period_Disestablished_uniq` IF NOT EXISTS
FOR (n: `Period Disestablished`)
REQUIRE (n.`Disestablished`) IS UNIQUE;
CREATE CONSTRAINT `Preceded_by_Preceding_Kingdom_uniq` IF NOT EXISTS
FOR (n: `Preceding Kingdom`)
REQUIRE (n.`Preceded by`) IS UNIQUE;
CREATE CONSTRAINT `Succeeded_by_Succeeding_Kingdom_uniq` IF NOT EXISTS
FOR (n: `Succeeding Kingdom`)
REQUIRE (n.`Succeeded by`) IS UNIQUE;
CREATE CONSTRAINT `Established_Period_Established _uniq` IF NOT EXISTS
FOR (n: `Period Established`)
REQUIRE (n.`Established`) IS UNIQUE;
CREATE CONSTRAINT `King_Ruler_uniq` IF NOT EXISTS
FOR (n: `Ruler`)
REQUIRE (n.`King`) IS UNIQUE;
CREATE CONSTRAINT `Name_of Play_Play_uniq` IF NOT EXISTS
FOR (n: `Play`)
REQUIRE (n.`Name of Play`) IS UNIQUE;
CREATE CONSTRAINT `Era_Period_uniq` IF NOT EXISTS
FOR (n: `Period`)
REQUIRE (n.`Era`) IS UNIQUE;
CREATE CONSTRAINT `Name_of Playwright_Playwright_uniq` IF NOT EXISTS
FOR (n: `Playwright`)
REQUIRE (n.`Name of Playwright`) IS UNIQUE;
CREATE CONSTRAINT `Object_History_Accession_Collection_uniq` IF NOT EXISTS
FOR (n: `Accession Collection`)
REQUIRE (n.`Object History`) IS UNIQUE;
CREATE CONSTRAINT `Reference_Material_Resource_uniq` IF NOT EXISTS
FOR (n: `Resource`)
REQUIRE (n.`Reference Material`) IS UNIQUE;
CREATE CONSTRAINT `Author_Name_Author_uniq` IF NOT EXISTS
FOR (n: `Author`)
REQUIRE (n.`Author Name`) IS UNIQUE;
CREATE CONSTRAINT `Present_Region Name_Present_Region_uniq` IF NOT EXISTS
FOR (n: `Present Region`)
REQUIRE (n.`Present Region Name`) IS UNIQUE;
CREATE CONSTRAINT `Longitude_Coordinate_Longitude_uniq` IF NOT EXISTS
FOR (n: `Longitude`)
REQUIRE (n.`Longitude Coordinate`) IS UNIQUE;
CREATE CONSTRAINT `Latitude_Coordinate_Latitude_uniq` IF NOT EXISTS
FOR (n: `Latitude`)
REQUIRE (n.`Latitude Coordinate`) IS UNIQUE;

:param idsToSkip => [];

// NODE load
// ---------
//
// Loading nodes in batches, one node label at a time. Nodes will be created using a MERGE statement to ensure a node with the same label and ID property remains unique. Pre-existing nodes found by a MERGE statement will have their other properties set to the latest values encountered in a load file.
//
// NOTE: Any nodes with IDs in the 'idsToSkip' list parameter will not be loaded.
LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Painting.csv' AS row
WITH row
WHERE NOT row.`Title` IN $idsToSkip AND NOT row.`Title` IS NULL
MERGE (n: `Painting` { `Title`: row.`Title` })
SET n.`Title` = row.`Title`,
    n.`System Number` = row.`System Number`,
    n.`Accession Number` = row.`Accession Number`,
    n.`Physical Description` = row.`Physical Description`,
    n.`Image ID` = row.`Image ID`,
    n.`SCRAN ID` = row.`SCRAN ID`;
    
LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Artist.csv' AS row
WITH row
WHERE NOT row.`Artist Name` IS NULL AND NOT row.`Artist Name` IN $idsToSkip
MERGE (n: `Artist` { `Artist Name`: row.`Artist Name` })
SET n.`Artist Name` = row.`Artist Name`,
    n.`Gender` = row.`Gender`,
    n.`Maker Person Name ID` = row.`Maker Person Name ID`,
    n.`Artist Details` = row.`Artist Details`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/ObjectCategory.csv' AS row
WITH row
WHERE NOT row.`Object Type` IN $idsToSkip AND NOT row.`Object Type` IS NULL
MERGE (n: `Object Category` { `Object Type`: row.`Object Type` })
SET n.`Object Type` = row.`Object Type`,
    n.`Category ID` = row.`Category ID`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Style.csv' AS row
WITH row
WHERE NOT row.`Style Name` IN $idsToSkip AND NOT row.`Style Name` IS NULL
MERGE (n: `Style` { `Style Name`: row.`Style Name` })
SET n.`Style Name` = row.`Style Name`,
    n.`Style ID` = row.`Style ID`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Events.csv' AS row
WITH row
WHERE NOT row.`Themes` IN $idsToSkip AND NOT row.`Themes` IS NULL
MERGE (n: `Events` { `Themes`: row.`Themes` })
SET n.`Themes` = row.`Themes`,
    n.`Episode Description` = row.`Episode Description`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row
WHERE NOT row.`Location Name` IN $idsToSkip AND NOT row.`Location Name` IS NULL
MERGE (n: `Locations` { `Location Name`: row.`Location Name` })
SET n.`Location Name` = row.`Location Name`,
    n.`Description` = row.`Description`,
    n.`Present Region Details` = row.`Present Region Details`,
    n.`Details` = row.`Details`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Characters.csv' AS row
WITH row
WHERE NOT row.`Character Name` IN $idsToSkip AND NOT row.`Character Name` IS NULL
MERGE (n: `Character` { `Character Name`: row.`Character Name` })
SET n.`Character Name` = row.`Character Name`,
    n.`Gender of Content Person` = row.`Gender of Content Person`,
    n.`Content Person ID` = row.`Content Person ID`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PlaceOfProduction.csv' AS row
WITH row
WHERE NOT row.`Place name` IN $idsToSkip AND NOT row.`Place name` IS NULL
MERGE (n: `Place of Production` { `Place name`: row.`Place name` })
SET n.`Place name` = row.`Place name`,
    n.`Place ID` = row.`Place ID`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/OtherContent.csv' AS row
WITH row
WHERE NOT row.`Other Content Details` IN $idsToSkip AND NOT row.`Other Content Details` IS NULL
MERGE (n: `Other Content` { `Other Content Details`: row.`Other Content Details` })
SET n.`Other Content Details` = row.`Other Content Details`,
    n.`Content other ID` = row.`Content other ID`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Material.csv' AS row
WITH row
WHERE NOT row.`Material Type` IN $idsToSkip AND NOT row.`Material Type` IS NULL
MERGE (n: `Material` { `Material Type`: row.`Material Type` })
SET n.`Material Type` = row.`Material Type`,
    n.`Material ID` = row.`Material ID`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Time.csv' AS row
WITH row
WHERE NOT row.`Date` IN $idsToSkip AND NOT row.`Date` IS NULL
MERGE (n: `Time` { `Date`: row.`Date` })
SET n.`Date` = row.`Date`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row
WHERE NOT row.`Text Name` IN $idsToSkip AND NOT row.`Text Name` IS NULL
MERGE (n: `Text` { `Text Name`: row.`Text Name` })
SET n.`Text Name` = row.`Text Name`,
    n.`Description` = row.`Description`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row
WHERE NOT row.`Credit Line` IN $idsToSkip AND NOT row.`Credit Line` IS NULL
MERGE (n: `Acquisition` { `Credit Line`: row.`Credit Line` })
SET n.`Credit Line` = row.`Credit Line`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Book.csv' AS row
WITH row
WHERE NOT row.`Book Name` IN $idsToSkip AND NOT row.`Book Name` IS NULL
MERGE (n: `Book` { `Book Name`: row.`Book Name` })
SET n.`Book Name` = row.`Book Name`,
    n.`Description` = row.`Description`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row
WHERE NOT row.`Disestablished` IN $idsToSkip AND NOT toInteger(trim(row.`Disestablished`)) IS NULL
MERGE (n: `Period Disestablished` { `Disestablished`: toInteger(trim(row.`Disestablished`)) })
SET n.`Disestablished` = toInteger(trim(row.`Disestablished`));

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row
WHERE NOT row.`Preceded by` IN $idsToSkip AND NOT row.`Preceded by` IS NULL
MERGE (n: `Preceding Kingdom` { `Preceded by`: row.`Preceded by` })
SET n.`Preceded by` = row.`Preceded by`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row
WHERE NOT row.`Succeeded by` IN $idsToSkip AND NOT row.`Succeeded by`IS NULL
MERGE (n: `Succeeding Kingdom` { `Succeeded By`: row.`Succeeded by` })
SET n.`Succeeded by` = row.`Succeeded by`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row
WHERE NOT row.`Established` IN $idsToSkip AND NOT toInteger(trim(row.`Established`)) IS NULL
MERGE (n: `Period Established` { `Established`: toInteger(trim(row.`Established`)) })
SET n.`Established` = toInteger(trim(row.`Established`));

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row
WHERE NOT row.`King` IN $idsToSkip AND NOT row.`King` IS NULL
MERGE (n: `Ruler` { King: row.`King` })
SET n.`King` = row.`King`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Painting.csv' AS row
WITH row
WHERE NOT row.`Name of Play` IN $idsToSkip AND NOT row.`Name of Play` IS NULL
MERGE (n: `Play` { `Name of Play`: row.`Name of Play` })
SET n.`Name of Play` = row.`Name of Play`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row
WHERE NOT row.`Era` IN $idsToSkip AND NOT row.`Era` IS NULL
MERGE (n: `Period` { `Era`: row.`Era` })
SET n.`Era` = row.`Era`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Painting.csv' AS row
WITH row
WHERE NOT row.`Name of Playwright` IN $idsToSkip AND NOT row.`Name of Playwright` IS NULL
MERGE (n: `Playwright` { `Name Of Playwright`: row.`Name of Playwright` })
SET n.`Name of Playwright` = row.`Name of Playwright`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row
WHERE NOT row.`Object History` IN $idsToSkip AND NOT row.`Object History` IS NULL
MERGE (n: `Accession Collection` { `Object History`: row.`Object History` })
SET n.`Object History` = row.`Object History`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row
WHERE NOT row.`Reference Material` IN $idsToSkip AND NOT row.`Reference Material` IS NULL
MERGE (n: Resource { `Reference Material`: row.`Reference Material` })
SET n.`Reference Material` = row.`Reference Material`,
    n.`Citation` = row.`Citation`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row
WHERE NOT row.`Author Name` IN $idsToSkip AND NOT row.`Author Name` IS NULL
MERGE (n: `Author` { `Author Name`: row.`Author Name` })
SET n.`Author Name` = row.`Author Name`,
    n.`Publisher` = row.`Publisher`,
    n.`Date Of Publication` = toInteger(trim(row.`Date Of Publication`));

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row
WHERE NOT row.`Present Region Name` IN $idsToSkip AND NOT row.`Present Region Name` IS NULL
MERGE (n: `Present Region` { `Present Region Name`: row.`Present Region Name` })
SET n.`Present Region Name` = row.`Present Region Name`;

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row
WHERE NOT row.`Longitude Coordinate` IN $idsToSkip AND NOT toFloat(trim(row.`Longitude Coordinate`)) IS NULL
MERGE (n: `Longitude` { `Longitude Coordinate`: toFloat(trim(row.`Longitude Coordinate`)) })
SET n.`Longitude Coordinate` = toFloat(trim(row.`Longitude Coordinate`));

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row
WHERE NOT row.`Latitude Coordinate` IN $idsToSkip AND NOT toFloat(trim(row.`Latitude Coordinate`)) IS NULL
MERGE (n: `Latitude` { `Latitude Coordinate`: toFloat(trim(row.`Latitude Coordinate`)) })
SET n.`Latitude Coordinate` = toFloat(trim(row.`Latitude Coordinate`));

// RELATIONSHIP load
// -----------------
//
// Load relationships in batches, one relationship type at a time. Relationships are created using a MERGE statement, meaning only one relationship of a given type will ever be created between a pair of nodes.
LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Artist.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Artist` { `Artist Name`: row.`Artist Name` })
MERGE (source)-[r: `Created By`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/ObjectCategory.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Object Category` { `Object Type`: row.`Object Type` })
MERGE (source)-[r: `Belongs To`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Style.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Style` { `Style Name`: row.`Style Name` })
MERGE (source)-[r: `Has Style`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Events.csv' AS row
WITH row 
MATCH (source: `Painting` { Title: row.`Title` })
MATCH (target: `Events` { `Themes`: row.`Themes` })
MERGE (source)-[r: `Describes`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Locations` { `Location Name`: row.`Location Name` })
MERGE (source)-[r: `Has Locations`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Characters.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Character` { `Character Name`: row.`Character Name` })
MERGE (source)-[r: `Depicts`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PlaceofProduction.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Place of Production` { `Place name`: row.`Place name` })
MERGE (source)-[r: `Produced In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/OtherContent.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Other Content` { `Other Content Details`: row.`Other Content Details` })
MERGE (source)-[r: `Has Elements`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Material.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Material` { `Material Type`: row.`Material Type` })
MERGE (source)-[r: `Is Made With`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Time.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Time` { `Date`: row.`Date` })
MERGE (source)-[r: `Created In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Text` { `Text Name`: row.`Text Name` })
MERGE (source)-[r: `Refers To`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Acquisition` { `Credit Line`: row.`Credit Line` })
MERGE (source)-[r: `Acquired/Given By`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/RelationshipCharacterLocation.csv' AS row
WITH row 
MATCH (source: `Locations` { `Location Name`: row.`Location Name` })
MATCH (target: `Character` { `Character Name`: row.`Character Name` })
MERGE (source)-[r: `Relates To`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Book.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: Book { `Book Name`: row.`Book Name` })
MERGE (source)-[r: `Pertains To`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Locations` { `Location Name`: row.`Location Name` })
MATCH (target: `Period Disestablished` { `Disestablished`: toInteger(trim(row.`Disestablished`)) })
MERGE (source)-[r: `Was Disestablished circa`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Locations` { `Location Name`: row.`Location Name` })
MATCH (target: `Preceding Kingdom` { `Preceded by`: row.`Preceded by` })
MERGE (source)-[r: `Was Preceded By Kingdom`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Locations` { `Location Name`: row.`Location Name` })
MATCH (target: `Succeeding Kingdom` { `Succeeded by`: row.`Succeeded by` })
MERGE (source)-[r: `Was Succeeded By Kingdom`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Locations` { `Location Name`: row.`Location Name` })
MATCH (target: `Period Established` { `Established`: toInteger(trim(row.`Established`)) })
MERGE (source)-[r: `Was Established circa`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Text` { `Text Name`: row.`Text Name` })
MATCH (target: `Ruler` { `King`: row.`King` })
MERGE (source)-[r: `Commissioned By`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Painting.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Play` { `Name of Play`: row.`Name of Play` })
MERGE (source)-[r: `Story Dramatised in`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Ruler` { `King`: row.`King` })
MATCH (target: `Period` { `Era`: row.`Era` })
MERGE (source)-[r: `Ruled During`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Artist.csv' AS row
WITH row 
MATCH (source: `Artist` { `Artist Name`: row.`Artist Name` })
MATCH (target: `Time` { `Date`: row.`Date` })
MERGE (source)-[r: `Lived During`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Painting.csv' AS row
WITH row 
MATCH (source: `Play` { `Name of Play`: row.`Name of Play` })
MATCH (target: `Playwright` { `Name of Playwright`: row.`Name of Playwright` })
MERGE (source)-[r: `Has Playwright`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row 
MATCH (source: `Acquisition` { `Credit Line`: row.`Credit Line` })
MATCH (target:`Accession Collection` { `Object History`: row.`Object History` })
MERGE (source)-[r: `Within Accession Collection`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row 
MATCH (source: `Painting` { Title: row.Title })
MATCH (target: `Resource` { `Reference Material`: row.`Reference Material` })
MERGE (source)-[r: `Cited In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row 
MATCH (source: `Resource` { `Reference Material`: row.`Reference Material` })
MATCH (target: `Author` { `Author Name`: row.`Author Name` })
MERGE (source)-[r: `Has Author`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Events.csv' AS row
WITH row 
MATCH (source: `Events` { `Themes`: row.`Themes` })
MATCH (target: `Book` { `Book Name`: row.`Book Name` })
MERGE (source)-[r: `Mentioned In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Place of Production` { `Place name`: row.`Place name` })
MATCH (target: `Ruler` { `King`: row.`King` })
MERGE (source)-[r: `Ruled by`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Material.csv' AS row
WITH row 
MATCH (source: `Material` { `Material Type`: row.`Material Type` })
MATCH (target: `Style` { `Style Name`: row.`Style Name` })
MERGE (source)-[r: `Identified In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Text` { `Text Name`: row.`Text Name` })
MATCH (target: `Place of Production` { `Place name`: row.`Place name` })
MERGE (source)-[r: `Composed in`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Characters.csv' AS row
WITH row 
MATCH (source: `Play` { `Name of Play`: row.`Name of Play` })
MATCH (target:`Character` { `Character Name`: row.`Character Name` })
MERGE (source)-[r: `Portrays`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Material.csv' AS row
WITH row 
MATCH (source: `Material` { `Material Type`: row.`Material Type` })
MATCH (target: Style { `Style Name`: row.`Style Name` })
MERGE (source)-[r: `Used In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row 
MATCH (source: `Locations` { `Location Name`: row.`Location Name` })
MATCH (target: `Present Region` { `Present Region Name`: row.`Present Region Name` })
MERGE (source)-[r: `Currently part of`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row 
MATCH (source: `Place of Production` { `Place name`: row.`Place name` })
MATCH (target: `Present Region` { `Present Region Name`: row.`Present Region Name` })
MERGE (source)-[r: `Is Present Day`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Artist.csv' AS row
WITH row 
MATCH (source: `Artist` { `Artist Name`: row.`Artist Name` })
MATCH (target: `Place of Production` { `Place name`: row.`Place name` })
MERGE (source)-[r: `Worked In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Style.csv' AS row
WITH row 
MATCH (source: `Style` { `Style Name`: row.`Style Name` })
MATCH (target: `Place of Production` { `Place name`: row.`Place name` })
MERGE (source)-[r: `Is Popular In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Artist.csv' AS row
WITH row 
MATCH (source: `Artist` { `Artist Name`: row.`Artist Name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Has created`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Time.csv' AS row
WITH row 
MATCH (source: `Time` { `Date`: row.`Date` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Was Created in`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PlaceofProduction.csv' AS row
WITH row 
MATCH (source: `Place of Production` { `Place name`: row.`Place name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Has Produced`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Ruler` { `King`: row.`King` })
MATCH (target: `Place of Production` { `Place name`: row.`Place name` })
MERGE (source)-[r: `Ruled over`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row 
MATCH (source: `Present Region` { `Present Region Name`: row.`Present Region Name` })
MATCH (target: `Place of Production` { `Place name`: row.`Place name` })
MERGE (source)-[r: `Previously was`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Locations` { `Location Name`: row.`Location Name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Locations in`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Characters.csv' AS row
WITH row 
MATCH (source: `Character` { `Character Name`: row.`Character Name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Is Depicted In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Style.csv' AS row
WITH row 
MATCH (source: `Style` { `Style Name`: row.`Style Name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Is Represented In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/ObjectCategory.csv' AS row
WITH row 
MATCH (source: `Object Category` { `Object Type`: row.`Object Type` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Has work`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Events.csv' AS row
WITH row 
MATCH (source: `Events` { `Themes`: row.`Themes` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Is Described In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Acquisition.csv' AS row
WITH row 
MATCH (source: `Acquisition` { `Credit Line`: row.`Credit Line` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Includes`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Material.csv' AS row
WITH row 
MATCH (source: `Material` { `Material Type`: row.`Material Type` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Is Used in`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Period` { `Era`: row.`Era` })
MATCH (target: `Ruler` { `King`: row.`King` })
MERGE (source)-[r: `Had Ruler`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/OtherContent.csv' AS row
WITH row 
MATCH (source: `Other Content` { `Other Content Details`: row.`Other Content Details` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Appear in`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Ruler` { `King`: row.`King` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Commissioned`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Period` { `Era`: row.`Era` })
MERGE (source)-[r: `Was Commissioned During`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Present Region` { `Present Region Name`: row.`Present Region Name` })
MERGE (source)-[r: `Has Present Day area`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row 
MATCH (source: `Present Region` { `Present Region Name`: row.`Present Region Name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Has connection`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/RelationshipCharacterLocation.csv' AS row
WITH row 
MATCH (source: `Character` { `Character Name`: row.`Character Name` })
MATCH (target: `Locations` { `Location Name`: row.`Location Name` })
MERGE (source)-[r: `Is Related to`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Period Disestablished` { `Disestablished`: toInteger(trim(row.`Disestablished`)) })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Associated Locations Disestablishment`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Preceding Kingdom` { `Preceded by`: row.`Preceded by` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Associated Locations Preceded by`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Succeeding Kingdom` { `Succeeded by`: row.`Succeeded by` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Associated Locations Succeeded by`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Locations.csv' AS row
WITH row 
MATCH (source: `Period Established` { `Established`: toInteger(trim(row.`Established`)) })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Associated Locations Establishment`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Text` { `Text Name`: row.`Text Name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Is in Reference to`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Book.csv' AS row
WITH row 
MATCH (source: `Book` { `Book Name`: row.`Book Name` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Relevant to`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Period` { `Era`: row.`Era` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Features`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Text.csv' AS row
WITH row 
MATCH (source: `Painting` { `Title`: row.`Title` })
MATCH (target: `Ruler` { `King`: row.`King` })
MERGE (source)-[r: `Commissioned`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Characters.csv' AS row
WITH row 
MATCH (source: `Character` { `Character Name`: row.`Character Name` })
MATCH (target: `Book` { `Book Name`: row.`Book Name` })
MERGE (source)-[r: `Is Present In`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row 
MATCH (source: `Present Region` { `Present Region Name`: row.`Present Region Name` })
MATCH (target: `Longitude` { `Longitude Coordinate`: toFloat(trim(row.`Longitude Coordinate`)) })
MERGE (source)-[r: `Has Longitude`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/PresentRegion.csv' AS row
WITH row 
MATCH (source: `Present Region` { `Present Region Name`: row.`Present Region Name` })
MATCH (target: `Latitude` { `Latitude Coordinate`: toFloat(trim(row.`Latitude Coordinate`)) })
MERGE (source)-[r: `Has Latitude`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Style.csv' AS row
WITH row 
MATCH (source: `Artist` { `Artist Name`: row.`Artist Name` })
MATCH (target: `Style` { `Style Name`: row.`Style Name` })
MERGE (source)-[r: `Is known for`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Painting.csv' AS row
WITH row 
MATCH (source: `Playwright` { `Name of Playwright`: row.`Name of Playwright` })
MATCH (target: `Painting` { `Title`: row.`Title` })
MERGE (source)-[r: `Adapted story`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Characters.csv' AS row
WITH row 
MATCH (source: `Character` { `Character Name`: row.`Character Name` })
MATCH (target: `Play` { `Name of Play`: row.`Name of Play` })
MERGE (source)-[r: `Is Portrayed`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Book.csv' AS row
WITH row 
MATCH (source: `Text` { `Text Name`: row.`Text Name` })
MATCH (target: `Book` { `Book Name`: row.`Book Name` })
MERGE (source)-[r: `Manuscript has`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Style.csv' AS row
WITH row 
MATCH (source: `Style` { `Style Name`: row.`Style Name` })
MATCH (target: `Artist` { `Artist Name`: row.`Artist Name` })
MERGE (source)-[r: `Found in work by`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Material.csv' AS row
WITH row 
MATCH (source: `Style` { `Style Name`: row.`Style Name` })
MATCH (target: `Material` { `Material Type`: row.`Material Type` })
MERGE (source)-[r: `Uses Material`]->(target);

LOAD CSV WITH HEADERS FROM 'http://localhost:11001/project-7315a0e5-83c5-4c5d-a74d-21e30659d590/Book.csv' AS row
WITH row 
MATCH (source: `Book` { `Book Name`: row.`Book Name` })
MATCH (target: `Text` { `Text Name`: row.`Text Name` })
MERGE (source)-[r: `Illustrated In Manuscript`]->(target);
